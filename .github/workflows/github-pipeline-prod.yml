name: PROD CI/CD Pipeline

on:
  push:
    branches:
      - PROD
  pull_request:
    branches:
      - PROD

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image for PROD
        run: |
          docker build -t alexstanevko/digital-ocean-vue3-test:latest .
          docker push alexstanevko/digital-ocean-vue3-test:latest

      - name: Set execute permission for scripts
        run: |
          chmod +x ./setActiveProdEnv.sh
          chmod +x ./updateNginxConfig.sh 

      - name: Determining the target server for PROD deployment
        env:
          PROD_1_IP: ${{ secrets.PROD_SERVER_IP }}
          PROD_2_IP: ${{ secrets.PROD_SERVER_IP_2 }}
          SSH_PRIVATE_KEY_DIGITAL_OCEAN_PROD_1: ${{ secrets.SSH_PRIVATE_KEY_DIGITAL_OCEAN_PROD }}
          SSH_PRIVATE_KEY_DIGITAL_OCEAN_PROD_2: ${{ secrets.SSH_PRIVATE_KEY_DIGITAL_OCEAN_PROD_2 }}
          SSH_PRIVATE_KEY_DIGITAL_OCEAN_LOAD_BALANCER: ${{ secrets.SSH_PRIVATE_KEY_DIGITAL_OCEAN_LOAD_BALANCER }}
          LOAD_BALANCER_SERVER_IP: ${{ secrets.LOAD_BALANCER_SERVER_IP }}
        run: ./setActiveProdEnv.sh

      - name: Deploy to Production Server
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -vvv -o StrictHostKeyChecking=no -i private_key.pem root@$SERVER_IP "docker pull alexstanevko/digital-ocean-vue3-test:latest && docker stop frontendvue3app || true && docker rm frontendvue3app || true && docker run -d --name frontendvue3app -p 80:80 alexstanevko/digital-ocean-vue3-test:latest"

      - name: Update Nginx Configuration on Load Balancer
        env:
          LOAD_BALANCER_SERVER_IP: ${{ secrets.LOAD_BALANCER_SERVER_IP }}
          SSH_PRIVATE_KEY_DIGITAL_OCEAN_LOAD_BALANCER: ${{ secrets.SSH_PRIVATE_KEY_DIGITAL_OCEAN_LOAD_BALANCER }}
        run: ./updateNginxConfig.sh

      - name: Notify Telegram on Deployment Success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 'Deployment to PROD successful'

      - name: Notify Telegram on Deployment Failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 'Deployment to PROD failed'

